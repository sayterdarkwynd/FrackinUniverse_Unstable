

{
  "pieces" : {
    "Full" : {
      "textureSize" : [16, 16],
      "texturePosition" : [16, 16],
	  "variantStride" : [0, 48]
    },
	
	
    "Down" : {
      "textureSize" : [16, 16],
      "texturePosition" : [16, 0],
	  "variantStride" : [0, 48]
    },
    "Left" : {
      "textureSize" : [16, 16],
      "texturePosition" : [32, 16],
	  "variantStride" : [0, 48]
    },
    "Up" : {
      "textureSize" : [16, 16],
      "texturePosition" : [16, 32],
	  "variantStride" : [0, 48]
    },
    "Right" : {
      "textureSize" : [16, 16],
      "texturePosition" : [0, 16],
	  "variantStride" : [0, 48]
    },
	
	
    "OuttieRD" : {
      "textureSize" : [16, 16],
      "texturePosition" : [0, 0],
	  "variantStride" : [0, 48]
    },
    "OuttieLD" : {
      "textureSize" : [16, 16],
      "texturePosition" : [32, 0],
	  "variantStride" : [0, 48]
    },
    "OuttieRU" : {
      "textureSize" : [16, 16],
      "texturePosition" : [0, 32],
	  "variantStride" : [0, 48]
    },
    "OuttieLU" : {
      "textureSize" : [16, 16],
      "texturePosition" : [32, 32],
	  "variantStride" : [0, 48]
    },
	
	
    "InnieLU" : {
      "textureSize" : [16, 16],
      "texturePosition" : [48, 0],
	  "variantStride" : [0, 48]
    },
    "InnieRU" : {
      "textureSize" : [16, 16],
      "texturePosition" : [64, 0],
	  "variantStride" : [0, 48]
    },
    "InnieLD" : {
      "textureSize" : [16, 16],
      "texturePosition" : [48, 16],
	  "variantStride" : [0, 48]
    },
    "InnieRD" : {
      "textureSize" : [16, 16],
      "texturePosition" : [64, 16],
	  "variantStride" : [0, 48]
    },
		
	
    "Point" : {
      "textureSize" : [16, 16],
      "texturePosition" : [48, 32],
	  "variantStride" : [0, 48]
    },
  
	
    "FullCenter" : {
      "textureSize" : [16, 16],
      "texturePosition" : [64, 32],
	  "variantStride" : [0, 48]
    }
	
	
  },
  
  
  

  "representativePiece": "Point",

    "rules" : {
    "EqualsSelf" : {
      "entries" : [
        {
          "type" : "EqualsSelf"
        }
      ]
    },
    "NotEqualsSelf" : {
      "entries" : [
        {
          "type" : "EqualsSelf",
          "inverse" : true
        }
      ]
    },
    "Connects" : {
      "entries" : [
        {
          "type" : "Connects"
        }
      ]
    },
    "Empty" : {
      "entries" : [
        {
          "type" : "Connects",
          "inverse" : true
        }
      ]
    }
  },
  
   "matches" : [
    ["main", [
	
	//Full
	{
        "matchAllPoints" : [
          [[-1, 0], "EqualsSelf"],
          [[-1, -1], "EqualsSelf"],
		  [[0, -1], "EqualsSelf"],
		  [[1, -1], "EqualsSelf"],
          [[1, 0], "EqualsSelf"],
          [[1, 1], "EqualsSelf"],
		  [[0, 1], "EqualsSelf"],
		  [[-1, 1], "EqualsSelf"]
        ],
		"haltOnMatch" : true,
        "pieces" : [["Full", [-4, -4]]],
        "subMatches" : [
          {
		  
			//FullCenter
            "matchAllPoints" : [
              [[-2, -2], "EqualsSelf"],
			  [[-2, -1], "EqualsSelf"],
			  [[-2, 0], "EqualsSelf"],
			  [[-2, 1], "EqualsSelf"],
			  [[-2, 2], "EqualsSelf"],
			  
			  [[-1, 2], "EqualsSelf"],
			  [[0, 2], "EqualsSelf"],
			  [[1, 2], "EqualsSelf"],
			  
			  [[-1, -2], "EqualsSelf"],
			  [[0, -2], "EqualsSelf"],
			  [[1, -2], "EqualsSelf"],
			  
			  [[2, -2], "EqualsSelf"],
			  [[2, -1], "EqualsSelf"],
			  [[2, 0], "EqualsSelf"],
			  [[2, 1], "EqualsSelf"],
			  [[2, 2], "EqualsSelf"]			  
			  
            ],
            "pieces" : [["FullCenter", [-4, -4]]]
          }
        ]
    },	


	
	
	//CrossCut
	{
        "matchAllPoints" : [
          [[-1, 0], "EqualsSelf"],
          [[-1, 1], "NotEqualsSelf"],
          [[0, 1], "EqualsSelf"],
          [[1, 1], "EqualsSelf"],
          [[1, 0], "EqualsSelf"],
          [[1, -1], "NotEqualsSelf"],
          [[0, -1], "EqualsSelf"],
          [[-1, -1], "EqualsSelf"]	  
        ],
		"haltOnMatch" : true,
        "pieces" : [["Point", [-4, -4]]]
    }, 	
	//CrossCutMirror
	{
        "matchAllPoints" : [
          [[-1, 0], "EqualsSelf"],
          [[-1, 1], "EqualsSelf"],
          [[0, 1], "EqualsSelf"],
          [[1, 1], "NotEqualsSelf"],
          [[1, 0], "EqualsSelf"],
          [[1, -1], "EqualsSelf"],
          [[0, -1], "EqualsSelf"],
          [[-1, -1], "NotEqualsSelf"]	  
        ],
		"haltOnMatch" : true,
        "pieces" : [["Point", [-4, -4]]]
    },	

	
	
	//InnieLU
	{
        "matchAllPoints" : [
          [[-1, 0], "EqualsSelf"],
		  [[-1, 1], "NotEqualsSelf"],
		  [[0, 1], "EqualsSelf"],
		  [[1, 1], "EqualsSelf"],
		  [[1, 0], "EqualsSelf"],
		  [[1, -1], "EqualsSelf"],
		  [[0, -1], "EqualsSelf"],
		  [[-1, -1], "EqualsSelf"]
        ],
		"haltOnMatch" : true,
        "pieces" : [["InnieLU", [-4, -4]]]
    },
	//InnieRU
	{
        "matchAllPoints" : [
          [[-1, 0], "EqualsSelf"],
		  [[-1, 1], "EqualsSelf"],
		  [[0, 1], "EqualsSelf"],
		  [[1, 1], "NotEqualsSelf"],
		  [[1, 0], "EqualsSelf"],
		  [[1, -1], "EqualsSelf"],
		  [[0, -1], "EqualsSelf"],
		  [[-1, -1], "EqualsSelf"]
        ],
		"haltOnMatch" : true,
        "pieces" : [["InnieRU", [-4, -4]]]
    },
	//InnieLD
	{
        "matchAllPoints" : [
          [[-1, 0], "EqualsSelf"],
		  [[-1, 1], "EqualsSelf"],
		  [[0, 1], "EqualsSelf"],
		  [[1, 1], "EqualsSelf"],
		  [[1, 0], "EqualsSelf"],
		  [[1, -1], "EqualsSelf"],
		  [[0, -1], "EqualsSelf"],
		  [[-1, -1], "NotEqualsSelf"]
        ],
		"haltOnMatch" : true,
        "pieces" : [["InnieLD", [-4, -4]]]
    },
	//InnieRD
	{
        "matchAllPoints" : [
          [[-1, 0], "EqualsSelf"],
		  [[-1, 1], "EqualsSelf"],
		  [[0, 1], "EqualsSelf"],
		  [[1, 1], "EqualsSelf"],
		  [[1, 0], "EqualsSelf"],
		  [[1, -1], "NotEqualsSelf"],
		  [[0, -1], "EqualsSelf"],
		  [[-1, -1], "EqualsSelf"]
        ],
		"haltOnMatch" : true,
        "pieces" : [["InnieRD", [-4, -4]]]
    },
	
	
	
	//Down	
	{
        "matchAllPoints" : [
          [[0, -1], "EqualsSelf"],
		  [[1, 0], "EqualsSelf"],
		  [[-1, 0], "EqualsSelf"],
		  [[-1, -1], "EqualsSelf"],
		  [[1, -1], "EqualsSelf"]
        ],
		"haltOnMatch" : true,
        "pieces" : [["Down", [-4, -4]]]
    },
	
	
	//Up	
	{
        "matchAllPoints" : [
          [[0, 1], "EqualsSelf"],
		  [[1, 0], "EqualsSelf"],
		  [[-1, 0], "EqualsSelf"],
		  [[-1, 1], "EqualsSelf"],
		  [[1, 1], "EqualsSelf"]
        ],
		"haltOnMatch" : true,
        "pieces" : [["Up", [-4, -4]]]
    },
	
	
	//Left
	{
        "matchAllPoints" : [
          [[-1, 0], "EqualsSelf"],
		  [[0, 1], "EqualsSelf"],
		  [[0, -1], "EqualsSelf"],
		  [[-1, 1], "EqualsSelf"],
		  [[-1, -1], "EqualsSelf"]
        ],
		"haltOnMatch" : true,
        "pieces" : [["Left", [-4, -4]]]
    },

	//Right
	{
        "matchAllPoints" : [
          [[1, 0], "EqualsSelf"],
		  [[0, 1], "EqualsSelf"],
		  [[0, -1], "EqualsSelf"],
		  [[1, 1], "EqualsSelf"],
		  [[1, -1], "EqualsSelf"]
        ],
		"haltOnMatch" : true,
        "pieces" : [["Right", [-4, -4]]]
    },
	
	
	

	//OuttieLD
	{
        "matchAllPoints" : [
          [[-1, 0], "EqualsSelf"],
		  [[0, -1], "EqualsSelf"],
		  [[-1, -1], "EqualsSelf"]
        ],
		"haltOnMatch" : true,
        "pieces" : [["OuttieLD", [-4, -4]]]
    },
	
	//OuttieRD
	{
        "matchAllPoints" : [
          [[1, 0], "EqualsSelf"],
		  [[0, -1], "EqualsSelf"],
		  [[1, -1], "EqualsSelf"]
        ],
		"haltOnMatch" : true,
        "pieces" : [["OuttieRD", [-4, -4]]]
    },
		
	//OuttieLU
	{
        "matchAllPoints" : [
          [[-1, 0], "EqualsSelf"],
		  [[0, 1], "EqualsSelf"],
		  [[-1, 1], "EqualsSelf"]
        ],
		"haltOnMatch" : true,
        "pieces" : [["OuttieLU", [-4, -4]]]
    },
	
	//OuttieRU
	{
        "matchAllPoints" : [
          [[1, 0], "EqualsSelf"],
		  [[0, 1], "EqualsSelf"],
		  [[1, 1], "EqualsSelf"]
        ],
		"haltOnMatch" : true,
        "pieces" : [["OuttieRU", [-4, -4]]]
    },


	
	
	
	
	//TDown
	{
        "matchAllPoints" : [
          [[1, 0], "EqualsSelf"],
		  [[-1, 0], "EqualsSelf"],
		  [[0, -1], "EqualsSelf"],
		  [[0, 1], "NotEqualsSelf"]
		  
        ],
		"haltOnMatch" : true,
        "pieces" : [["Point", [-4, -4]]]
    },		
	//TUp
	{
        "matchAllPoints" : [
          [[1, 0], "EqualsSelf"],
		  [[-1, 0], "EqualsSelf"],
		  [[0, 1], "EqualsSelf"],
		  [[0, -1], "NotEqualsSelf"]
		  
        ],
		"haltOnMatch" : true,
        "pieces" : [["Point", [-4, -4]]]
    },		
	//TLeft
	{
        "matchAllPoints" : [
          [[0, 1], "EqualsSelf"],
		  [[0, -1], "EqualsSelf"],
		  [[-1, 0], "EqualsSelf"],
		  [[1, 0], "NotEqualsSelf"]
		  
        ],
		"haltOnMatch" : true,
        "pieces" : [["Point", [-4, -4]]]
    },			
	//TRight
	{
        "matchAllPoints" : [
          [[0, 1], "EqualsSelf"],
		  [[0, -1], "EqualsSelf"],
		  [[1, 0], "EqualsSelf"],
		  [[-1, 0], "NotEqualsSelf"]
		  
        ],
		"haltOnMatch" : true,
        "pieces" : [["Point", [-4, -4]]]
    },
	
	
	
	//TurnRD
	{
        "matchAllPoints" : [
          [[1, 0], "EqualsSelf"],
		  [[0, -1], "EqualsSelf"],
		  [[-1, 0], "NotEqualsSelf"],
		  [[0, 1], "NotEqualsSelf"]
		  
        ],
		"haltOnMatch" : true,
        "pieces" : [["Point", [-4, -4]]]
    },
	//TurnLD
	{
        "matchAllPoints" : [
          [[-1, 0], "EqualsSelf"],
		  [[0, -1], "EqualsSelf"],
		  [[1, 0], "NotEqualsSelf"],
		  [[0, 1], "NotEqualsSelf"]
		  
        ],
		"haltOnMatch" : true,
        "pieces" : [["Point", [-4, -4]]]
    },
	//TurnRU
	{
        "matchAllPoints" : [
          [[1, 0], "EqualsSelf"],
		  [[0, 1], "EqualsSelf"],
		  [[-1, 0], "NotEqualsSelf"],
		  [[0, -1], "NotEqualsSelf"]
		  
        ],
		"haltOnMatch" : true,
        "pieces" : [["Point", [-4, -4]]]
    },
	//TurnLU
	{
        "matchAllPoints" : [
          [[-1, 0], "EqualsSelf"],
		  [[0, 1], "EqualsSelf"],
		  [[1, 0], "NotEqualsSelf"],
		  [[0, -1], "NotEqualsSelf"]
		  
        ],
		"haltOnMatch" : true,
        "pieces" : [["Point", [-4, -4]]]
    },
	
	
	
	//Point
	{
        "matchAllPoints" : [
          [[1, 0], "NotEqualsSelf"],
		  [[-1, 0], "NotEqualsSelf"],
		  [[0, 1], "NotEqualsSelf"],
		  [[0, -1], "NotEqualsSelf"]
        ],
		"haltOnMatch" : true,
        "pieces" : [["Point", [-4, -4]]]
    },
	
	
	
	//HorizLine, CapLeft and CapRight
	{
        "matchAllPoints" : [
          [[0, 1], "NotEqualsSelf"],
		  [[0, -1], "NotEqualsSelf"]
        ],
		"haltOnMatch" : true,
        "pieces" : [["Point", [-4, -4]]],
        "subMatches" : [
          {
			//CapRight
            "matchAllPoints" : [
              [[1, 0], "NotEqualsSelf"]
            ],
            "pieces" : [["Point", [-4, -4]]]
          },
          {
			//CapLeft
            "matchAllPoints" : [
              [[-1, 0], "NotEqualsSelf"]
            ],
            "pieces" : [["Point", [-4, -4]]]
          }		  
        ]
    },	
	//VertiLine, CapUp and CapDown
	{
        "matchAllPoints" : [
          [[1, 0], "NotEqualsSelf"],
		  [[-1, 0], "NotEqualsSelf"]
        ],
		"haltOnMatch" : true,
        "pieces" : [["Point", [-4, -4]]],
        "subMatches" : [
          {
			//CapDown
            "matchAllPoints" : [
              [[0, -1], "NotEqualsSelf"]
            ],
            "pieces" : [["Point", [-4, -4]]]
          },
          {
			//CapUp
            "matchAllPoints" : [
              [[0, 1], "NotEqualsSelf"]
            ],
            "pieces" : [["Point", [-4, -4]]]
          }		  
        ]
    },		
		
		
		
	//Plus
	{
        "matchAllPoints" : [
          [[1, 1], "NotEqualsSelf"],
		  [[1, -1], "NotEqualsSelf"],
		  [[-1, 1], "NotEqualsSelf"],
		  [[-1, -1], "NotEqualsSelf"]
        ],
		"haltOnMatch" : true,
        "pieces" : [["Point", [-4, -4]]]
    }



	
	]]
	]
}














//Made by Cgeta: http://community.playstarbound.com/members/cgeta.68988/




