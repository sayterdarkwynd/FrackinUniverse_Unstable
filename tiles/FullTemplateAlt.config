
//This version of the FullTemplate is unfinished as there seems to be a limit on how many subMatches there can be. I need 9, but it smoothly caps off after 4


{
  "pieces" : {
    "Full" : {
      "textureSize" : [16, 16],
      "texturePosition" : [16, 16],
	  "variantStride" : [0, 48]
    },
	
	
    "Down" : {
      "textureSize" : [16, 16],
      "texturePosition" : [16, 0],
	  "variantStride" : [0, 48]
    },
    "Left" : {
      "textureSize" : [16, 16],
      "texturePosition" : [32, 16],
	  "variantStride" : [0, 48]
    },
    "Up" : {
      "textureSize" : [16, 16],
      "texturePosition" : [16, 32],
	  "variantStride" : [0, 48]
    },
    "Right" : {
      "textureSize" : [16, 16],
      "texturePosition" : [0, 16],
	  "variantStride" : [0, 48]
    },
	
	
    "OuttieRD" : {
      "textureSize" : [16, 16],
      "texturePosition" : [0, 0],
	  "variantStride" : [0, 48]
    },
    "OuttieLD" : {
      "textureSize" : [16, 16],
      "texturePosition" : [32, 0],
	  "variantStride" : [0, 48]
    },
    "OuttieRU" : {
      "textureSize" : [16, 16],
      "texturePosition" : [0, 32],
	  "variantStride" : [0, 48]
    },
    "OuttieLU" : {
      "textureSize" : [16, 16],
      "texturePosition" : [32, 32],
	  "variantStride" : [0, 48]
    },
	
	
    "InnieLU" : {
      "textureSize" : [16, 16],
      "texturePosition" : [48, 0],
	  "variantStride" : [0, 48]
    },
    "InnieRU" : {
      "textureSize" : [16, 16],
      "texturePosition" : [64, 0],
	  "variantStride" : [0, 48]
    },
    "InnieLD" : {
      "textureSize" : [16, 16],
      "texturePosition" : [48, 16],
	  "variantStride" : [0, 48]
    },
    "InnieRD" : {
      "textureSize" : [16, 16],
      "texturePosition" : [64, 16],
	  "variantStride" : [0, 48]
    },
	
	
    "HorizLine" : {
      "textureSize" : [16, 16],
      "texturePosition" : [48, 32],
	  "variantStride" : [0, 48]
    },
    "VertiLine" : {
      "textureSize" : [16, 16],
      "texturePosition" : [64, 32],
	  "variantStride" : [0, 48]
    },
	
	
    "TurnRD" : {
      "textureSize" : [16, 16],
      "texturePosition" : [80, 0],
	  "variantStride" : [0, 48]
    },
    "TurnLD" : {
      "textureSize" : [16, 16],
      "texturePosition" : [112, 0],
	  "variantStride" : [0, 48]
    },
    "TurnRU" : {
      "textureSize" : [16, 16],
      "texturePosition" : [80, 32],
	  "variantStride" : [0, 48]
    },
    "TurnLU" : {
      "textureSize" : [16, 16],
      "texturePosition" : [112, 32],
	  "variantStride" : [0, 48]
    },
	
	
    "TDown" : {
      "textureSize" : [16, 16],
      "texturePosition" : [96, 0],
	  "variantStride" : [0, 48]
    },
    "TUp" : {
      "textureSize" : [16, 16],
      "texturePosition" : [96, 32],
	  "variantStride" : [0, 48]
    },
    "TRight" : {
      "textureSize" : [16, 16],
      "texturePosition" : [80, 16],
	  "variantStride" : [0, 48]
    },
    "TLeft" : {
      "textureSize" : [16, 16],
      "texturePosition" : [112, 16],
	  "variantStride" : [0, 48]
    },
	
	
    "Plus" : {
      "textureSize" : [16, 16],
      "texturePosition" : [96, 16],
	  "variantStride" : [0, 48]
    },
	
	
    "Point" : {
      "textureSize" : [16, 16],
      "texturePosition" : [128, 16],
	  "variantStride" : [0, 48]
    },
  
  
    "CapDown" : {
      "textureSize" : [16, 16],
      "texturePosition" : [128, 0],
	  "variantStride" : [0, 48]
    },
    "CapUp" : {
      "textureSize" : [16, 16],
      "texturePosition" : [144, 0],
	  "variantStride" : [0, 48]
    },
    "CapLeft" : {
      "textureSize" : [16, 16],
      "texturePosition" : [128, 32],
	  "variantStride" : [0, 48]
    },
    "CapRight" : {
      "textureSize" : [16, 16],
      "texturePosition" : [144, 32],
	  "variantStride" : [0, 48]
    },
	
	
    "FullCenter" : {
      "textureSize" : [16, 16],
      "texturePosition" : [144, 16],
	  "variantStride" : [0, 48]
    },
	
	
    "CombinatorLD" : {
      "textureSize" : [16, 16],
      "texturePosition" : [160, 0],
	  "variantStride" : [0, 48]
    },

    "CombinatorLU" : {
      "textureSize" : [16, 16],
      "texturePosition" : [176, 0],
	  "variantStride" : [0, 48]
    },

    "CombinatorRD" : {
      "textureSize" : [16, 16],
      "texturePosition" : [160, 16],
	  "variantStride" : [0, 48]
    },

    "CombinatorRU" : {
      "textureSize" : [16, 16],
      "texturePosition" : [176, 16],
	  "variantStride" : [0, 48]
    },
	
	
   "CombinatorLUMirror" : {
      "textureSize" : [16, 16],
      "texturePosition" : [192, 0],
	  "variantStride" : [0, 48]
    },

    "CombinatorRUMirror" : {
      "textureSize" : [16, 16],
      "texturePosition" : [208, 0],
	  "variantStride" : [0, 48]
    },

    "CombinatorLDMirror" : {
      "textureSize" : [16, 16],
      "texturePosition" : [192, 16],
	  "variantStride" : [0, 48]
    },

    "CombinatorRDMirror" : {
      "textureSize" : [16, 16],
      "texturePosition" : [208, 16],
	  "variantStride" : [0, 48]
    },
	
	
   "CombinatorComboLD" : {
      "textureSize" : [16, 16],
      "texturePosition" : [160, 32],
	  "variantStride" : [0, 48]
    },

    "CombinatorComboLU" : {
      "textureSize" : [16, 16],
      "texturePosition" : [176, 32],
	  "variantStride" : [0, 48]
    },

    "CombinatorComboRU" : {
      "textureSize" : [16, 16],
      "texturePosition" : [192, 32],
	  "variantStride" : [0, 48]
    },

    "CombinatorComboRD" : {
      "textureSize" : [16, 16],
      "texturePosition" : [208, 32],
	  "variantStride" : [0, 48]
    },
	
	
   "CombinatorTU" : {
      "textureSize" : [16, 16],
      "texturePosition" : [224, 0],
	  "variantStride" : [0, 48]
    },

    "CombinatorTR" : {
      "textureSize" : [16, 16],
      "texturePosition" : [240, 0],
	  "variantStride" : [0, 48]
    },

    "CombinatorTD" : {
      "textureSize" : [16, 16],
      "texturePosition" : [224, 16],
	  "variantStride" : [0, 48]
    },

    "CombinatorTL" : {
      "textureSize" : [16, 16],
      "texturePosition" : [240, 16],
	  "variantStride" : [0, 48]
    },
	
	
   "CrossCut" : {
      "textureSize" : [16, 16],
      "texturePosition" : [224, 32],
	  "variantStride" : [0, 48]
    },

    "CrossCutMirror" : {
      "textureSize" : [16, 16],
      "texturePosition" : [240, 32],
	  "variantStride" : [0, 48]
    }
	
  },
  
  
  

  "representativePiece": "Point",

    "rules" : {
    "EqualsSelf" : {
      "entries" : [
        {
          "type" : "EqualsSelf"
        }
      ]
    },
    "NotEqualsSelf" : {
      "entries" : [
        {
          "type" : "EqualsSelf",
          "inverse" : true
        }
      ]
    },
    "Connects" : {
      "entries" : [
        {
          "type" : "Connects"
        }
      ]
    },
    "Empty" : {
      "entries" : [
        {
          "type" : "Connects",
          "inverse" : true
        }
      ]
    }
  },
  
   "matches" : [
    ["main", [
	
	
		//Default Point
		//OOO
		//OXO
		//OOO		
		{
			"haltOnSubMatch" : true,
      "subMatches" : [
			
				//CapRight
				//OOO
				//OXX
				//OOO
        {		
					"matchAllPoints" : [
					[[1, 0], "EqualsSelf"]
					],						
					
					"haltOnSubMatch" : true,
					"subMatches" : [
					
						//HorizLine
						//OOO
						//XXX
						//OOO
						{
							"matchAllPoints" : [
							[[-1, 0], "EqualsSelf"]
							],
							
							"haltOnSubMatch" : true,
							"subMatches" : [
							
								//TUp
								//OXO
								//XXX
								//OOO
								{
									"matchAllPoints" : [
									[[0, 1], "EqualsSelf"]
									],
									
									"haltOnSubMatch" : true,
									"subMatches" : [
									
										//Plus
										//OXO
										//XXX
										//OXO
										{
											"matchAllPoints" : [
											[[0, -1], "EqualsSelf"]
											],
											
											"haltOnSubMatch" : true,
											"subMatches" : [
											
												//CombinatorComboLD
												//OXO
												//XXX
												//XXO
												{
													"matchAllPoints" : [
													[[-1, -1], "EqualsSelf"]
													],
													
													"haltOnSubMatch" : true,
													"subMatches" : [	

														//CombinatorTD
														//OXO
														//XXX
														//XXX
														{
														},
														
														
														//-LAYER 6-
														
														
														//CombinatorTL
														//XXO
														//XXX
														//XXO
														{
														},
														
														
														//-LAYER 6-
														
														
														//CrossCut
														//OXX
														//XXX
														//XXO
														{
														},
														
														
														//-LAYER 6-
														
														
														//Place CombinatorComboLD
														{
															"haltOnMatch" : true,
															"pieces" : [["CombinatorComboLD", [-4, -4]]]															
														}
													]
												},
												
												//-LAYER 5-
												
												
												//CombinatorComboLU
												//XXO
												//XXX
												//OXO
												{
													"matchAllPoints" : [
													[[-1, 1], "EqualsSelf"]
													],
													
													"haltOnSubMatch" : true,
													"subMatches" : [			
								
														//CombinatorTU
														//XXX
														//XXX
														//OXO
														{
														},
														
														
														//-LAYER 6-
														
														
														//CrossCutMirror
														//XXO
														//XXX
														//OXX
														{
														},
														
														
														//-LAYER 6-
														
														
														//Place CombinatorComboLU
														{
															"haltOnMatch" : true,
															"pieces" : [["CombinatorComboLU", [-4, -4]]]															
														}							
													]
												},
												
												//-LAYER 5-
												
												
												//CombinatorComboRU
												//OXX
												//XXX
												//OXO
												{
													"matchAllPoints" : [
													[[-1, 1], "EqualsSelf"]
													],
													
													"haltOnSubMatch" : true,
													"subMatches" : [	

														//CombinatorTR
														//OXX
														//XXX
														//OXX
														{
														},
														
														
														//-LAYER 6-
														
														
														//Place CombinatorComboRU
														{
															"haltOnMatch" : true,
															"pieces" : [["CombinatorComboRU", [-4, -4]]]															
														}													
													]
												},
												
												//-LAYER 5-
												
												
												//CombinatorComboRD
												//OXO
												//XXX
												//OXX
												{
													"matchAllPoints" : [
													[[1, -1], "EqualsSelf"]
													],

													//Place CombinatorComboRD
													"haltOnMatch" : true,
													"pieces" : [["CombinatorComboRD", [-4, -4]]]														
												},
												
												//-LAYER 5-
												
												
												//Place Plus
												{
													"haltOnMatch" : true,
													"pieces" : [["Plus", [-4, -4]]]	
												}													
											]
										},
									
									
										//-LAYER 4-
										
										
										//CombinatorLUMirror
										//XXO
										//XXX
										//OOO
										{
											"matchAllPoints" : [
											[[-1, 1], "EqualsSelf"]
											],
											
											"haltOnSubMatch" : true,
											"subMatches" : [	
											
												//Up
												//XXX
												//XXX
												//OOO
												{
													"matchAllPoints" : [
													[[1, 1], "EqualsSelf"]
													],

													//Place Up
													"haltOnMatch" : true,
													"pieces" : [["Up", [-4, -4]]]													
												},
												
												
												//-LAYER 5-
												
												
												//Place CombinatorLUMirror
												{
													"haltOnMatch" : true,
													"pieces" : [["CombinatorLUMirror", [-4, -4]]]	
												}										
											]
										},
										
										
										//-LAYER 4-
										
										
										//CombinatorRU
										//OXX
										//XXX
										//OOO
										{
											"matchAllPoints" : [
											[[1, 1], "EqualsSelf"]
											],

											//Place CombinatorRU
											"haltOnMatch" : true,
											"pieces" : [["CombinatorRU", [-4, -4]]]													
										},
										
										
										//-LAYER 4-
										
										
										//Place TUp
										{
											"haltOnMatch" : true,
											"pieces" : [["TUp", [-4, -4]]]	
										}									
									]								
								},
								
								
								//-LAYER 3-
								
								
								//TDown
								//OOO
								//XXX
								//OXO
								{
									"matchAllPoints" : [
									[[0, -1], "EqualsSelf"]
									],
									
									"haltOnSubMatch" : true,
									"subMatches" : [								
								
										//CombinatorLD
										//OOO
										//XXX
										//XXO
										{
											"matchAllPoints" : [
											[[-1, -1], "EqualsSelf"]
											],
											
											"haltOnSubMatch" : true,
											"subMatches" : [

												//Down
												//OOO
												//XXX
												//XXX
												{
													"matchAllPoints" : [
													[[1, -1], "EqualsSelf"]
													],

													//Place Down
													"haltOnMatch" : true,
													"pieces" : [["Down", [-4, -4]]]														
												},
													
													
												//-LAYER 5-
													
													
												//Place CombinatorLD
												{
													"haltOnMatch" : true,
													"pieces" : [["CombinatorLD", [-4, -4]]]	
												}											
											]
										},
										
										
										//-LAYER 4-
										
										
										//CombinatorRDMirror
										//OOO
										//XXX
										//OXX
										{
											"matchAllPoints" : [
											[[1, -1], "EqualsSelf"]
											],
											
											//Place CombinatorRDMirror
											"haltOnMatch" : true,
											"pieces" : [["CombinatorRDMirror", [-4, -4]]]												
										},
										
										
										//-LAYER 4-
										
										
										//Place TDown
										{
											"haltOnMatch" : true,
											"pieces" : [["TDown", [-4, -4]]]	
										}								
										
									]
								},
								
								
								//-Layer 3-
								
								
								//Place HorizLine
								{
									"haltOnMatch" : true,
									"pieces" : [["HorizLine", [-4, -4]]]	
								}
							]
						},
						
						
						//-LAYER 2-
						
						
						//TurnRD
						//OOO
						//OXX
						//OXO
						{
							"matchAllPoints" : [
							[[0, -1], "EqualsSelf"]
							],
							
							"haltOnSubMatch" : true,
							"subMatches" : [						
						
								//TRight
								//OXO
								//OXX
								//OXO
								{
									"matchAllPoints" : [
									[[0, 1], "EqualsSelf"]
									],
									
									"haltOnSubMatch" : true,
									"subMatches" : [		

										//CombinatorRUMirror
										//OXX
										//OXX
										//OXO
										{
											"matchAllPoints" : [
											[[1, 1], "EqualsSelf"]
											],
											
											"haltOnSubMatch" : true,
											"subMatches" : [		

												//Right
												//OXX
												//OXX
												//OXX
												{
													"matchAllPoints" : [
													[[1, -1], "EqualsSelf"]
													],

													//Place Right
													"haltOnMatch" : true,
													"pieces" : [["Right", [-4, -4]]]																
												},
												
												
												//-LAYER 5-
												
												
												//Place CombinatorRUMirror
												{
													"haltOnMatch" : true,
													"pieces" : [["CombinatorRUMirror", [-4, -4]]]	
												}													
											]
										},
										
										
										//-LAYER 4-
										
										
										//CombinatorRD
										//OXO
										//OXX
										//OXX
										{
											"matchAllPoints" : [
											[[1, -1], "EqualsSelf"]
											],
											
											//Place CombinatorRD
											"haltOnMatch" : true,
											"pieces" : [["CombinatorRD", [-4, -4]]]												
										},
										
										
										//-LAYER 4-
										
										
										//Place TRight
										{
											"haltOnMatch" : true,
											"pieces" : [["TRight", [-4, -4]]]	
										}											
									]
								},
								
								
								//-LAYER 3-
								
								
								//OuttieRD
								//OOO
								//OXX
								//OXX
								{
									"matchAllPoints" : [
									[[1, -1], "EqualsSelf"]
									],

									//Place OuttieRD
									"haltOnMatch" : true,
									"pieces" : [["OuttieRD", [-4, -4]]]										
								},
								
								
								//-LAYER 3-
								
								
								//Place TurnRD
								{
									"haltOnMatch" : true,
									"pieces" : [["TurnRD", [-4, -4]]]								
								}
						
							]
						},
						
						
						//-LAYER 2-
						
						
						//TurnRU
						//OXO
						//OXX
						//OOO
						{
						
							"matchAllPoints" : [
							[[0, 1], "EqualsSelf"]
							],
							
							"haltOnSubMatch" : true,
							"subMatches" : [		

								//OuttieRU
								//OXX
								//OXX
								//OOO
								{
									"matchAllPoints" : [
									[[1, 1], "EqualsSelf"]
									],

									//Place OuttieRU
									"haltOnMatch" : true,
									"pieces" : [["OuttieRU", [-4, -4]]]				
								},
								
								
								//-LAYER 3-
								
								
								//Place TurnRU
								{
									"haltOnMatch" : true,
									"pieces" : [["TurnRU", [-4, -4]]]								
								}							
							]						
						},
						
						
						//-LAYER 2-
						
						
						//Place CapRight
						{
							"haltOnMatch" : true,
							"pieces" : [["CapRight", [-4, -4]]]				
						}						
					]
				},
				
				
				//-LAYER 1-
				
				
 				//CapDown
				//OOO
				//OXO
				//OXO	
				{		
					"matchAllPoints" : [
					[[0, -1], "EqualsSelf"]
					],

					"haltOnSubMatch" : true,
					"subMatches" : [
					
						//VertiLine
						//OXO
						//OXO
						//OXO
						{
						
							"matchAllPoints" : [
							[[0, 1], "EqualsSelf"]
							],
							
							"haltOnSubMatch" : true,
							"subMatches" : [		

								//TLeft
								//OXO
								//XXO
								//OXO
								{
									"matchAllPoints" : [
									[[-1, 0], "EqualsSelf"]
									],
									
									"haltOnSubMatch" : true,
									"subMatches" : [
									
										//CombinatorLU
										//XXO
										//XXO
										//OXO
										{
											"matchAllPoints" : [
											[[-1, 1], "EqualsSelf"]
											],
											
											"haltOnSubMatch" : true,
											"subMatches" : [	

												//Left
												//XXO
												//XXO
												//XXO
												{
													"matchAllPoints" : [
													[[-1, -1], "EqualsSelf"]
													],

													//Place Left
													"haltOnMatch" : true,
													"pieces" : [["Left", [-4, -4]]]													
												},
												
												
												//-LAYER 5-
												
												
												//Place CombinatorLU
												{
													"haltOnMatch" : true,
													"pieces" : [["CombinatorLU", [-4, -4]]]													
												}											
											]
										},
										
										
										//-LAYER 4-
										
										
										//CombinatorLDMirror
										//OXO
										//XXO
										//XXO
										{
											"matchAllPoints" : [
											[[-1, -1], "EqualsSelf"]
											],
											
											//Place CombinatorLDMirror
											"haltOnMatch" : true,
											"pieces" : [["CombinatorLDMirror", [-4, -4]]]												
										},
										
										
										//-LAYER 4-
										
										
										//Place TLeft
										{
											"haltOnMatch" : true,
											"pieces" : [["TLeft", [-4, -4]]]	
										}
									]
								},
								
								
								//-LAYER 3-
								
								
								//Placing VertiLine
								{
									"haltOnMatch" : true,
									"pieces" : [["VertiLine", [-4, -4]]]								
								}						
							]						
						},
						
						
						//-LAYER 2-
						
						
						//TurnLD
						//OOO
						//XXO
						//OXO	
						{
							"matchAllPoints" : [
							[[-1, 0], "EqualsSelf"]
							],
							
							"haltOnSubMatch" : true,
							"subMatches" : [

								//OuttieLD
								//OOO
								//XXO
								//XXO
								{
									"matchAllPoints" : [
									[[-1, -1], "EqualsSelf"]
									],

									//Place OuttieLD
									"haltOnMatch" : true,
									"pieces" : [["OuttieLD", [-4, -4]]]									
								},
							
							
								//-LAYER 3-
								
								
								//Placing TurnLD
								{
									"haltOnMatch" : true,
									"pieces" : [["TurnLD", [-4, -4]]]								
								}							
							]						
						},
						
						
						//-LAYER 2-
						
						
						//Place CapDown
						{
							"haltOnMatch" : true,
							"pieces" : [["CapDown", [-4, -4]]]				
						}	
					]
				},
				
				
				//-LAYER 1-
				
				
 				//CapLeft
				//OOO
				//XXO
				//OOO	
				{		
					"matchAllPoints" : [
					[[-1, 0], "EqualsSelf"]
					],		
					
					"haltOnSubMatch" : true,
					"subMatches" : [
					
						//TurnLU
						//OXO
						//XXO
						//OOO
						{
							"matchAllPoints" : [
							[[0, 1], "EqualsSelf"]
							],
							
							"haltOnSubMatch" : true,
							"subMatches" : [

								//OuttieLU
								//XXO
								//XXO
								//OOO
								{
									"matchAllPoints" : [
									[[-1, 1], "EqualsSelf"]
									],

									//Place OuttieLU
									"haltOnMatch" : true,
									"pieces" : [["OuttieLU", [-4, -4]]]		
								},
							
							
								//-LAYER 3-
								
								
								//Place TurnLU
								{
									"haltOnMatch" : true,
									"pieces" : [["TurnLU", [-4, -4]]]				
								}							
							]						
						},

						
						//-LAYER 2-
						
						
						//Place CapLeft
						{
							"haltOnMatch" : true,
							"pieces" : [["CapLeft", [-4, -4]]]				
						}						
					]
				},
				
				
				//-LAYER 1-
				
				
				//CapUp
				//OXO
				//OXO
				//OOO						
        {		
					"matchAllPoints" : [
					[[0, 1], "EqualsSelf"]
					],	
					
					//Place CapUp
					"haltOnMatch" : true,
					"pieces" : [["CapUp", [-4, -4]]]				
				},
				
				
				//-LAYER 1-
				
				
				//Place Point
				{
					"haltOnMatch" : true,
          "pieces" : [["Point", [-4, -4]]]				
				}	
			]	
		}
	
	
	]]
	]
}












//Made by Cgeta: http://community.playstarbound.com/members/cgeta.68988/






